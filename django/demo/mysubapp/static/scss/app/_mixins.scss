// ---------------------------------//
// BOOSTRAP HELPERS
// ---------------------------------//

@function get-bootstrap-breakpoints() {
    @return (
        xs: $screen-xs,
        sm: $screen-sm,
        md: $screen-md,
        lg: $screen-lg,
        xs-max: $screen-xs-max,
        sm-max: $screen-sm-max,
        md-max: $screen-md-max
    )
};

@mixin bootstrap-breakpoint($key) {
    $breakpoints: get-bootstrap-breakpoints();

    @include breakpoint(map-get($breakpoints, $key)) {
        @content;
    }
}

@mixin bootstrap-breakpoint-max($key) {
    $breakpoints: get-bootstrap-breakpoints();

    @include breakpoint(max-width map-get($breakpoints, $key)) {
        @content;
    }
}

@mixin breakpoint-xs() {
    @include bootstrap-breakpoint(xs) {
        @content;
    }
}

@mixin breakpoint-xs-max() {
    @include bootstrap-breakpoint-max(xs-max) {
        @content;
    }
}

@mixin breakpoint-sm() {
    @include bootstrap-breakpoint(sm) {
        @content;
    }
}

@mixin breakpoint-sm-max() {
    @include bootstrap-breakpoint-max(sm-max) {
        @content;
    }
}

@mixin breakpoint-md() {
    @include bootstrap-breakpoint(md) {
        @content;
    }
}

@mixin breakpoint-md-max() {
    @include bootstrap-breakpoint-max(md-max) {
        @content;
    }
}

@mixin breakpoint-lg() {
    @include bootstrap-breakpoint(lg) {
        @content;
    }
}

@mixin center-row {
    text-align: center;
}

@mixin center-column {
    [class*="col-"] {
        display: inline-block;
        float: none;
        // fix inline element "mystery" space
        // (occurs when doc has newlines between elements)
        margin-right: -4px;
    }
}

// -------------------------------- //
// POSITION HELPERS
// -------------------------------- //

// see: extends for utility classes

/**
 * convenience mixin to generate positioning styles
 * @param  {position} $position
 * @param  {List} $positions
 * @param  {Number} $z-index
 *
 * @examples
 * position(absolute);
 * position(absolute, bottom 0 right 50px);
 * position(absolute, $positions: bottom 0 right 0);
 */
@mixin position($position, $positions: top 0 left 0) {
    $index: 1;
    $len: length($positions);
    $prop: null;
    $val: null;

    position: $position;

    @while $index < $len {
        $prop: nth($positions, $index);
        $val: nth($positions, $index + 1);

        #{$prop}: $val;

        $index: $index + 2;
    }
}

@mixin position-relative() {
    @include position(relative);
}

@mixin position-absolute() {
    @include position(absolute);
}

@mixin position-fixed() {
    @include position(fixed);
}